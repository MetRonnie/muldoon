name: Comment on PR

on:
  pull_request:
    branches: [master]
    paths: ['__init__.py']

jobs:
  pr-comment:
    if: startsWith(github.head_ref, 'prepare-')
    runs-on: ubuntu-latest
    timeout-minutes: 5
    env:
      REPOSITORY: ${{ github.repository }}
      PACKAGE_PATH: '.'
    steps:
    - name: Checkout repo
      uses: actions/checkout@v2.3.1

    - name: Check version number
      run: |
        # Extract `__version__ = "x.y.z"` number:
        pattern="__version__ ?= ?['\"]\K.*(?=['\"])"
        INIT_VERSION=$( grep -oP "${pattern}" "${PACKAGE_PATH}/__init__.py" )
        echo "::set-env name=INIT_VERSION::$INIT_VERSION"

        if [[ -z "$INIT_VERSION" ]]; then
          echo "::error :: Version number not found in ${PACKAGE_PATH}/__init__.py"
          exit 1
        fi
        if ! grep -qF "$INIT_VERSION" <<< "${{ github.head_ref }}"; then
          echo "::warning :: Version number in __init__.py (${INIT_VERSION}) does not match version number in PR branch name (${{ github.head_ref }})"
        fi

    - name: Check milestone
      shell: node {0}
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        const {exec} = require('child_process');
        const env = process.env;

        const request = `curl https://api.github.com/repos/${env.REPOSITORY}/milestones \
          -H "authorization: Bearer $GH_TOKEN" \
          --silent --fail`;
          // Don't use env.GH_TOKEN above as that might print in log.
        exec(request, (err, stdout, stderr) => {
          if (err) throw err;
          if (stderr) throw stderr;
          const response_arr = JSON.parse(stdout);
          for (const milestone of response_arr) {
            if (milestone.title.includes(env.INIT_VERSION)) {
              console.log(`::set-env name=MILESTONE_JSON::${JSON.stringify(milestone)}`)
              console.log(`Title: ${milestone.title}, open issues: ${milestone.open_issues}`);
              return;
            }
          }
          console.log(`::warning :: Could not find milestone matching "${env.INIT_VERSION}"`);
          console.log(response_arr);
        });

    - name: Comment on PR
      if: always()
      env:
        WORKFLOW: ${{ github.workflow }}
        HEAD_REF: ${{ github.head_ref }}
        JOB_STATUS: ${{ job.status }}
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        comment_json=$( node .github/pr-comment.js )

        curl -X POST \
          ${{ github.event.pull_request.comments_url }} \
          -H "content-type: application/json" \
          -H "authorization: Bearer ${GH_TOKEN}" \
          --data "$comment_json" \
          --fail
